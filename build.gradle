group 'com.yk.demo'
version '1.0.0'

buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
//        springCloudVersion = 'Edgware.RELEASE'
        springCloudVersion = 'Dalston.SR5'
        springCloudStreamVersion = 'Ditmars.SR2'
        // gralde -Prelease
        if (project.hasProperty('release')) {
            releasePublish = true
        } else {
            releasePublish = false
        }
        println "releasePublish:${releasePublish}"
    }
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/"}
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = 1.8
    ext {
        // project的额外属性，这里用于定义profile属性，模拟maven的profile
        //多环境配置
        if (project.hasProperty('profile')) {
            profile = project['profile']
        } else {
            profile = "dev"
        }
        snippetsDir = file("$buildDir/generated-snippets")
    }
    configurations.all {
        //默认情况下包才上传后24小时更新一次，这个配置自动更新为10s
        //10秒钟，可自定义，如10,'minutes'10分钟，10,'hours'10小时
        resolutionStrategy.cacheChangingModulesFor 10, 'seconds'
    }
}

subprojects {
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/"}
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        flatDir {
            dirs 'lib'
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-stream-dependencies:${springCloudStreamVersion}"
        }
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDir 'src/main/java'
            }
        }
        main {
            resources {
                srcDir "src/main/profiles/${profile}"
            }
        }
    }
    test {
        outputs.dir snippetsDir
    }

    dependencies {

        //==依赖==
        compile('org.springframework.boot:spring-boot-starter')
        compile('org.springframework.boot:spring-boot-starter-thymeleaf')

//        compile('org.springframework.boot:spring-boot-starter-security')
        compile('org.springframework.boot:spring-boot-starter-mail')
//        compile('org.springframework.cloud:spring-cloud-starter-oauth2')
        compile('org.springframework.session:spring-session')



        compile("org.apache.commons:commons-lang3:3.1")
        // json
        compile("com.alibaba:fastjson:1.2.16")
        compile("org.json:json:20160212")
        compile group: 'net.sf.json-lib', name: 'json-lib', version: '2.4', classifier: 'jdk15'




        // 数据库连接
        compile("org.springframework.boot:spring-boot-starter-jdbc")
//        compile("com.oracle:ojdbc6:11g")
//        compile("com.bestvike:bv-mybatis:3.4.5.1")

        compile("mysql:mysql-connector-java")

        compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final")
        //数据库加密
        compile 'com.github.ulisesbocchio:jasypt-spring-boot-starter:1.14'

        //==运行时==
//        runtime('org.springframework.boot:spring-boot-devtools')
        //==编译时==
        compileOnly('org.springframework.boot:spring-boot-configuration-processor')
        compileOnly('org.projectlombok:lombok')
        //==测试时==
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('org.springframework.security:spring-security-test')
        testCompile('org.projectlombok:lombok')

        compile("org.springframework.cloud:spring-cloud-starter-stream-rabbit")
//    compile project(":hco-core:hco-config")
        //feign
        compile('org.springframework.cloud:spring-cloud-starter-feign')
        //链路追踪
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-ribbon'
        compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth'
//    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.6'

        //tools
        compile group: 'com.google.guava', name: 'guava', version: '25.0-jre'
        //日志平台
//    compile group: 'com.github.danielwegener', name: 'logback-kafka-appender', version: '0.1.0'
//    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.6'
//    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.6'
//    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.8'
    }
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}
